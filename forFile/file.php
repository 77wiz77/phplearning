<?php //Чтение и запись файлов
/*Открытие и закрытие файлов
Для открытия файлов в PHP определена функция fopen(). Она имеет следующее определение: 
resource fopen(string $filename, string $mode). Первый параметр $filename представляет путь к файлу, 
а второй - режим открытия. В зависимости от цели открытия и типа файла данный параметр может принимать следующие значения:
'r': файл открывается только для чтения. Если файла не существует, возвращает false
'r+': файл открывается только для чтения с возможностью записи. Если файла не существует, возвращает false
'w': файл открывается для записи. Если такой файл уже существует, то он перезаписывается, если нет - то он создается
'w+': файл открывается для записи с возможностью чтения. 
Если такой файл уже существует, то он перезаписывается, если нет - то он создается
'a': файл открывается для записи. Если такой файл уже существует, то данные записываются в конец файла, а старые данные остаются. 
Если файл не существует, то он создается
'a+': файл открывается для чтения и записи. Если файл уже существует, то данные дозаписываются в конец файла. 
Если файла нет, то он создается

Результатом функции fopen будет дескриптор файла. Этот дескриптор используется для операций с файлом и для его закрытия.
После окончания работы файл надо закрыть с помощью функции fclose(), которая принимает в качестве параметра дескриптор файла. 
Например, откроем и закроем файл:
*/
  // $fd = fopen("form.txt", 'r') or die("не удалось открыть файл"); //открывает файл hello.txt или 
  // //если его нет, создает новый с таким же именем
  // fclose($fd); //лучше закрывать файлы самостоятельно, чтобы не оставлять их открытыми на протяжении всего скрипта, так безопаснее

  /*Конструкция or die("текст ошибки") позволяет прекратить работу скрипта и вывесте некоторое сообщение об ошибке, 
  если функция fopen не смогла открыть файл.*/
?>

<?php //Чтение файла
/*Для чтения файла можно использовать несколько функций. 
Для построчного чтения используется функция fgets(), которая получает дескриптор файла и возвращает одну считанную строку. 
Пройдем построчно по всему файлу:*/

  // $fd = fopen("form.php", 'r') or die("не удалось открыть файл");
  // // // $str = htmlentities(fgets($fd)); //htmlentities() - вывести с html тегами / fgets - построчное чтение
  // // //     echo $str; //выведется только первая строка файла form.php
  // while(!feof($fd)) //feof -- Проверяет, достигнут ли конец файла // цикл для того, чтобы полностью прочитать файл
  // {
  //     $str = htmlentities(fgets($fd)); //htmlentities() - вывести с html тегами / fgets - построчное чтение
  //     echo $str; //выведется весь файл
  // }
  // fclose($fd);

  /*При каждом вызове fgets() PHP будет помещать указатель в конец считанной строки. 
  Чтобы проследить окончание файла, используется функция feof(), которая возвращает true при завершении файла. 
  И пока не будет достигнут конец файла, мы можем применять функцию fgets().*/
?>

<?php //Чтение файла полностью
//Если нам надо прочитать файл полностью, то мы можем облегчить себе жизнь, применив функцию file_get_contents():
  // $str = htmlentities(file_get_contents("form.php"));
  // echo $str;
  //При этом нам не надо открывать явно файл, получать дескриптор, а затем закрывать файл.
?>

<?php //Поблочное считывание
  //Также можно провести поблочное считывание, то есть считывать определенное количество байт из файла с помощью функции fread():
  // $fd = fopen("form.php", 'r') or die("не удалось открыть файл");
  // while(!feof($fd))
  // {
    // $str = htmlentities(fread($fd, 600)); //прочитать 600 байт из файла (считывание происходит рандомно)
    // echo $str;
  // }
  // fclose($fd);
  /*Функция fread() принимает два параметра: дескриптор считываемого файла и количество считываемых байтов. 
  При считывании блока указатель в файле становится в конец этого блока. 
  И также с помощью функции feof() можно отследить завершение файла.*/

  //Пример посимвольного чтения с помощью функции fgets(файл, длина) / если длину не вводить, то будет просто первая строка
  // $fd = fopen("form.php", 'r') or die("не удалось открыть файл");
  // $str = htmlentities(fgets($fd, 5)); //вывести первые 4 символов (отчет начинается от 1)
  // echo $str;
  // fclose($fd);
?>

<?php //Запись файла
//Для записи файла применяется функция fwrite(), которая записывает в файл строку:
  // $fd = fopen("hello.txt", 'w') or die("не удалось создать файл"); //открывает файл hello.txt или если его нет, 
  // //создает новый с таким же именем
  // $str = "Привет мир";
  // fwrite($fd, $str); //пишет туда строку "пример мир"
  // fclose($fd);
?>

<?php //Аналогично работает другая функция fputs():
  // $fd = fopen("hello.txt", 'w') or die("не удалось создать файл"); //если нету то создается, если есть то перезаписывается
  // $str = "Привет мир !!!!";
  // fputs($fd, $str);
  // fclose($fd);
?>

<?php //Работа с указателем файла
  /*
  При открытии файла для чтения или записи в режиме 'w', указатель в файле помещается в начало. 
  При считывании данных PHP перемещает указатель в файле в конец блока считанных данных. 
  Однако мы также вручную можем управлять указателем в файле и устанавливать его в произвольное место. 
  Для этого надо использовать функцию fseek, которая имеет следующее формальное определение:

  int fseek (resource $handle , int $offset [, int $whence = SEEK_SET ] )
  Параметр $handle представляет дескриптор файла. Параметр $offset - смещение в байтах относительно начала файла, 
  с которого начнется считывание/запись. Третий необязательный параметр задает способ установки смещения. 
  Он может принимать три значения:

  SEEK_SET: значение по умолчанию, устанавливает смещение в offset байт относительно начала файла

  SEEK_CUR: устанавливает смещение в offset байт относительно начала текущей позиции в файле

  SEEK_END: устанавливает смещение в offset байт от конца файла

  В случае удачной установки указателя функция fseek() возвращает 0, а при неудачной установке возвращает -1.
  Пример использования функции:
  */
  $fd = fopen("hello.txt", 'w+') or die("не удалось открыть файл");
  $str = "Привет мир!"; // строка для записи
  fwrite($fd, $str); // запишем строку в начало
  fseek($fd, 0); // поместим указатель файла в начало
  fwrite($fd, "Хрю"); // запишем в начало строку / также перезаписывает первые три символа на хрю
  fseek($fd, 0, SEEK_END); // поместим указатель в конец
  fwrite($fd, $str); // запишем в конце еще одну строку
  fclose($fd);
?>